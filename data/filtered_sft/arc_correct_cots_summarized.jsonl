{"task_id": "007bbfb7", "summary_model": "openrouter/optimus-alpha", "summary": "Expand the 3x3 input grid into a 9x9 grid by replacing each cell (i, j) in a 3x3 block grid with the entire input grid if the corresponding input cell (i, j) is nonzero; otherwise, fill that block with zeros. Each block is 3x3, so the output is a 3x3 grid of 3x3 blocks, with blocks filled or zeroed based on the input cell values.", "summary_prompt_tokens": 1330, "summary_completion_tokens": 98}
{"task_id": "017c7c7b", "summary_model": "openrouter/optimus-alpha", "summary": "For each input row, create a 3x3 output block where each '1' becomes '2' in the same position and '0's remain unchanged; stack these blocks vertically in order to form the output.", "summary_prompt_tokens": 444, "summary_completion_tokens": 45}
{"task_id": "0520fde7", "summary_model": "openrouter/optimus-alpha", "summary": "For each cell in the 3x3 output grid, set its value to 2 if the corresponding cell in both the left (columns 0\u20132) and right (columns 4\u20136) parts of the input grid contains a 1; otherwise, set it to 0. The left and right parts are defined as the columns before and after the column containing 5 in each row.", "summary_prompt_tokens": 2368, "summary_completion_tokens": 83}
{"task_id": "05f2a901", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the stationary red object and the movable blue object. Move the blue object as a whole along the axis (horizontal or vertical) where the minimum Manhattan distance between any blue and red pixel occurs, shifting it toward the red object until the closest blue and red pixels are adjacent (distance 1). The blue object\u2019s shape and orientation are preserved during the move; only its position changes. The red object remains unchanged.", "summary_prompt_tokens": 2921, "summary_completion_tokens": 84}
{"task_id": "08ed6ac7", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all 4-way connected components of cells with value 5 in the input grid. Assign each component a unique integer label starting from 1, in the order their first cell is encountered during a row-major (top-to-bottom, left-to-right) scan. Replace all 5's in each component with their assigned label; leave all other cells unchanged.", "summary_prompt_tokens": 1080, "summary_completion_tokens": 73}
{"task_id": "0ca9ddb6", "summary_model": "openrouter/optimus-alpha", "summary": "For each cell in the input grid:\n- If the cell contains a 1, set its four orthogonal neighbors (up, down, left, right) to 7 in the output grid.\n- If the cell contains a 2, set its four diagonal neighbors (top-left, top-right, bottom-left, bottom-right) to 4 in the output grid.\n- All other nonzero cells (including 6 and 8) are copied unchanged, and black (0) cells remain 0 unless overwritten by the above rules.\n- If multiple rules assign a value to the same cell, the last applied value overwrites previous ones.", "summary_prompt_tokens": 2452, "summary_completion_tokens": 131}
{"task_id": "0d3d703e", "summary_model": "openrouter/optimus-alpha", "summary": "Each digit in the input grid is replaced by a specific mapped digit according to a fixed digit-to-digit mapping derived from the examples; the mapping is: 1\u21925, 2\u21924 or 6, 3\u21926 or 4, 4\u21928, 5\u21921, 6\u21922, 8\u21929, 9\u21923. The transformation is applied to each digit in the grid independently.", "summary_prompt_tokens": 471, "summary_completion_tokens": 89}
{"task_id": "1190e5a7", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the color forming complete horizontal and vertical lines (the \"line color\") and the background color. Count the number of horizontal segments (regions between horizontal lines, including above the first and below the last) and vertical segments (regions between vertical lines, including left of the first and right of the last). Create an output grid with dimensions equal to the number of horizontal segments by the number of vertical segments, filled entirely with the background color.", "summary_prompt_tokens": 1949, "summary_completion_tokens": 89}
{"task_id": "1bfc4729", "summary_model": "openrouter/optimus-alpha", "summary": "For each unique nonzero digit in the input grid, fill three consecutive rows centered on the digit\u2019s row with that digit. In these rows, fill the entire row and also fill the corresponding columns where the digit appears. For the remaining rows below, create a border pattern with the digit: fill the entire bottom row, and in the rows above, fill only the first and last columns with the digit. Repeat this process for each distinct nonzero digit found in the input.", "summary_prompt_tokens": 791, "summary_completion_tokens": 96}
{"task_id": "1cf80156", "summary_model": "openrouter/optimus-alpha", "summary": "Extract the smallest rectangular subgrid from the input that contains all non-zero cells; the output is this cropped region, preserving the original cell values and positions within the bounding box.", "summary_prompt_tokens": 1854, "summary_completion_tokens": 36}
{"task_id": "1e0a9b12", "summary_model": "openrouter/optimus-alpha", "summary": "For each column, move all non-zero numbers to the bottom of the column in their original order, filling the remaining cells above with zeros. Repeat this independently for every column.", "summary_prompt_tokens": 2222, "summary_completion_tokens": 36}
{"task_id": "1f642eb9", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the largest connected component of non-black cells (the main block), and for each of its cells, check in order: up, down, left, right. If the cell is the outermost in its direction within the component and there is a non-black, non-component \"influencer\" cell in that direction (in the same row or column, closest to the edge), replace the component cell's value with the influencer's value. Only the first applicable direction is used per cell. All other cells remain unchanged.", "summary_prompt_tokens": 3474, "summary_completion_tokens": 106}
{"task_id": "1f876c06", "summary_model": "openrouter/optimus-alpha", "summary": "For each nonzero color that appears exactly twice in the input grid, draw a straight diagonal line (either down-right or down-left) connecting the two colored cells by filling all cells along the line segment with that color in the output grid. The output is the superposition of all such lines for each color.", "summary_prompt_tokens": 2574, "summary_completion_tokens": 63}
{"task_id": "0962bcdd", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all plus-shaped patterns in the input grid, where a center cell (C) is surrounded orthogonally by arm cells (A). For each such plus, generate a 5x5 pattern centered at the same location with the following layout:\n\n```\nC 0 A 0 C\n0 C A C 0\nA A C A A\n0 C A C 0\nC 0 A 0 C\n```\n\nPlace each 5x5 pattern onto a zero-initialized output grid, centered at the plus's original position. Repeat for all plus shapes; if patterns do not overlap, simply overlay them.", "summary_prompt_tokens": 1907, "summary_completion_tokens": 131}
{"task_id": "1b2d62fb", "summary_model": "openrouter/optimus-alpha", "summary": "For each row, split the 7-column input into left (columns 0\u20132) and right (columns 4\u20136) parts, ignoring the central separator (column 3). In the output, set a cell to 8 if both the corresponding left and right input cells are 0; otherwise, set it to 0.", "summary_prompt_tokens": 2533, "summary_completion_tokens": 71}
{"task_id": "1c786137", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the largest solid rectangular frame in the input grid formed by a single non-background color, then extract and output the subgrid strictly inside this frame (excluding the frame itself).", "summary_prompt_tokens": 2545, "summary_completion_tokens": 36}
{"task_id": "1fad071e", "summary_model": "openrouter/optimus-alpha", "summary": "Count the number of 2x2 blocks of all 1s (N1) and all 2s (N2) in the input grid. Construct a list with N1 ones followed by N2 zeros, then output the first five elements as a 1x5 grid.", "summary_prompt_tokens": 2131, "summary_completion_tokens": 60}
{"task_id": "2013d3e2", "summary_model": "openrouter/optimus-alpha", "summary": "Find the smallest rectangular bounding box that contains all non-zero cells in the input grid, extract this subgrid, and output its top-left 3x3 section as the result.", "summary_prompt_tokens": 1366, "summary_completion_tokens": 37}
{"task_id": "22168020", "summary_model": "openrouter/optimus-alpha", "summary": "For each row, for every nonzero color present, fill all cells between the leftmost and rightmost occurrence of that color in the row (exclusive) with that color. Repeat for all colors and rows; leave other cells unchanged.", "summary_prompt_tokens": 2403, "summary_completion_tokens": 48}
{"task_id": "2281f1f4", "summary_model": "openrouter/optimus-alpha", "summary": "For each row where only the last column is '5' and all other entries are '0', replace every '0' in columns where the first row has a nonzero digit with '2' (except the last column, which remains '5'); all other rows remain unchanged.", "summary_prompt_tokens": 826, "summary_completion_tokens": 58}
{"task_id": "22eb0ac0", "summary_model": "openrouter/optimus-alpha", "summary": "For each row, if the first and last elements are the same nonzero digit, replace the entire row with that digit; otherwise, leave the row unchanged.", "summary_prompt_tokens": 825, "summary_completion_tokens": 33}
{"task_id": "23581191", "summary_model": "openrouter/optimus-alpha", "summary": "Given a grid with one blue (8) and one red (7) cell, draw horizontal and vertical lines through each: blue lines at the blue cell\u2019s row and column, red lines at the red cell\u2019s row and column. At the intersections of the blue row with the red column and the red row with the blue column, set the color to green (2). The original blue and red cell positions remain their original colors. All other cells are black (0).", "summary_prompt_tokens": 2548, "summary_completion_tokens": 96}
{"task_id": "23b5c85d", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all distinct contiguous nonzero-colored shapes in the input grid, compute the area (number of cells) of each shape, select the shape with the smallest area, and output that shape cropped to its minimal bounding box.", "summary_prompt_tokens": 1772, "summary_completion_tokens": 45}
{"task_id": "253bf280", "summary_model": "openrouter/optimus-alpha", "summary": "For every pair of cells containing 8 that are aligned in the same row or column, if all cells strictly between them along that row or column are 0, change those 0s to 3; otherwise, leave them unchanged. All other cells remain as in the input.", "summary_prompt_tokens": 3041, "summary_completion_tokens": 58}
{"task_id": "25d8a9c8", "summary_model": "openrouter/optimus-alpha", "summary": "For each row in the input grid, if all digits are the same, output a row of 5s; otherwise, output a row of 0s.", "summary_prompt_tokens": 347, "summary_completion_tokens": 34}
{"task_id": "25ff71a9", "summary_model": "openrouter/optimus-alpha", "summary": "Shift all rows of the grid down by one position, moving the last row to the top.", "summary_prompt_tokens": 342, "summary_completion_tokens": 20}
{"task_id": "2dc579da", "summary_model": "openrouter/optimus-alpha", "summary": "Find the row and column where all entries are the same separator color; let their index be k. Identify the unique pixel (not background or separator color) and determine its quadrant relative to (k, k). Extract the k\u00d7k subgrid from that quadrant (top-left, top-right, bottom-left, or bottom-right) and output it.", "summary_prompt_tokens": 2147, "summary_completion_tokens": 71}
{"task_id": "2dee498d", "summary_model": "openrouter/optimus-alpha", "summary": "For each row, identify the smallest repeating pattern and crop the row to include only the first occurrence of this pattern; apply this to all rows to produce the output grid.", "summary_prompt_tokens": 416, "summary_completion_tokens": 35}
{"task_id": "31aa019c", "summary_model": "openrouter/optimus-alpha", "summary": "Find the color that appears exactly once in the input grid and note its position; in the output, create a 3x3 square centered at this position, placing the unique color at the center and filling the surrounding eight cells with color 2, setting all other cells to 0.", "summary_prompt_tokens": 2843, "summary_completion_tokens": 59}
{"task_id": "3618c87e", "summary_model": "openrouter/optimus-alpha", "summary": "For each cell containing a '1', change that cell to '0' and set the cell in the same column of the bottom row to '1', leaving all other cells unchanged.", "summary_prompt_tokens": 1375, "summary_completion_tokens": 38}
{"task_id": "363442ee", "summary_model": "openrouter/optimus-alpha", "summary": "Copy the 3x3 source pattern from the top-left of the input. Keep columns 0\u20133 unchanged in the output. Divide the right 9\u00d79 area (columns 4\u201312) into nine 3\u00d73 blocks. For each block, if any cell in the corresponding input block contains a 1, fill that block in the output with the source pattern; otherwise, fill it with zeros.", "summary_prompt_tokens": 4123, "summary_completion_tokens": 86}
{"task_id": "3aa6fb7a", "summary_model": "openrouter/optimus-alpha", "summary": "For each cell with value 0, change it to 1 if and only if it has exactly two orthogonal (up, down, left, right) neighbors with value 8; otherwise, leave all cells unchanged.", "summary_prompt_tokens": 2881, "summary_completion_tokens": 46}
{"task_id": "3af2c5a8", "summary_model": "openrouter/optimus-alpha", "summary": "Given an input grid, construct a new grid by arranging four blocks in a 2x2 pattern: top-left is the original grid, top-right is the original grid flipped horizontally, bottom-left is the original grid flipped vertically, and bottom-right is the original grid flipped both horizontally and vertically. The output grid thus has double the height and width of the input, with each quadrant being a mirrored version of the input.", "summary_prompt_tokens": 2660, "summary_completion_tokens": 85}
{"task_id": "3bd67248", "summary_model": "openrouter/optimus-alpha", "summary": "Given an input of identical numbers with a single nonzero leading digit followed by zeros, generate an output where each row (except the last) has a '2' in a unique position shifting from the rightmost to the leftmost zero (after the leading digit), with all other digits as in the input; the final row replaces all zeros after the leading digit with '4's.", "summary_prompt_tokens": 798, "summary_completion_tokens": 78}
{"task_id": "3bdb4ada", "summary_model": "openrouter/optimus-alpha", "summary": "For each contiguous horizontal block of a single nonzero color that is exactly 3 rows high, replace the middle row of the block so that, within the colored segment, the color alternates between the original color and 0 (background), starting with the color. All other cells remain unchanged.", "summary_prompt_tokens": 3175, "summary_completion_tokens": 60}
{"task_id": "41e4d17e", "summary_model": "openrouter/optimus-alpha", "summary": "For each connected group of '1's in the grid, compute its bounding box and determine its center row and column (using floor division). Then, for every cell in the grid that is background ('8') and lies on any center row or center column of any object, change it to '6'. All other cells remain unchanged.", "summary_prompt_tokens": 4080, "summary_completion_tokens": 68}
{"task_id": "44f52bb0", "summary_model": "openrouter/optimus-alpha", "summary": "If the center cell and all four corner cells contain only 0 or 2, output 1; otherwise, output 7.", "summary_prompt_tokens": 364, "summary_completion_tokens": 28}
{"task_id": "46f33fce", "summary_model": "openrouter/optimus-alpha", "summary": "For each nonzero cell at position (r, c) in the 10x10 input grid, fill a 4x4 block of the same color in the 20x20 output grid, with the block\u2019s top-left corner at ((r // 2) * 4, (c // 2) * 4). All other output cells remain zero.", "summary_prompt_tokens": 4502, "summary_completion_tokens": 77}
{"task_id": "47c1f68c", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the unique row and column filled with the same non-black separator color, which divides the input grid into four quadrants. Extract the top-left quadrant (above and left of the separator lines), replace all its non-black cells with the separator color (keeping black as black), and then create the output grid by reflecting this transformed quadrant horizontally, vertically, and both ways to fill the four quadrants of an output grid of double the quadrant's size. The result is a symmetric pattern using only black and the separator color.", "summary_prompt_tokens": 4273, "summary_completion_tokens": 105}
{"task_id": "496994bd", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the contiguous block of non-black rows at the top of the input grid (the \"pattern\"). In the output, copy this pattern to the top rows, fill the middle rows with black (0), and place a vertically flipped version of the pattern at the bottom rows. The output grid has the same dimensions as the input.", "summary_prompt_tokens": 1858, "summary_completion_tokens": 67}
{"task_id": "49d1d64f", "summary_model": "openrouter/optimus-alpha", "summary": "Expand the input grid by adding a border of width 1 filled with zeros; then, for each non-corner border cell, copy the value from the adjacent inner cell toward the center (top/bottom borders copy from the row below/above, left/right borders copy from the column right/left); the original input grid occupies the center, and the four corners remain zero.", "summary_prompt_tokens": 2503, "summary_completion_tokens": 77}
{"task_id": "4be741c5", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all unique colors in the input grid, compute the average row and column for each color, determine whether the color regions are arranged more horizontally (if the range of average columns is greater than the range of average rows) or vertically, then sort the colors by their average position along the primary axis (left-to-right for horizontal, top-to-bottom for vertical), and output them as a single row or column accordingly.", "summary_prompt_tokens": 2005, "summary_completion_tokens": 84}
{"task_id": "4c4377d9", "summary_model": "openrouter/optimus-alpha", "summary": "Given an input of 3 rows, output a 6-row grid by first listing the input rows in reverse order, followed by the input rows in their original order.", "summary_prompt_tokens": 474, "summary_completion_tokens": 35}
{"task_id": "50cb2852", "summary_model": "openrouter/optimus-alpha", "summary": "For each maximal solid rectangle of a non-black color in the grid, change all its interior cells (those not on the rectangle\u2019s border) to color 8, leaving the border and all other cells unchanged. Rectangles with height or width less than 3 (i.e., no interior) are left unmodified.", "summary_prompt_tokens": 3962, "summary_completion_tokens": 65}
{"task_id": "54d82841", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all non-overlapping 5-pixel shapes of the form {(r, c), (r, c+1), (r, c+2), (r+1, c), (r+1, c+2)} with the same nonzero color in the grid. For each such shape, place a '4' in the last row at column c+1 (the column of the \"gap\" in the shape). The rest of the grid remains unchanged.", "summary_prompt_tokens": 2296, "summary_completion_tokens": 98}
{"task_id": "54d9e175", "summary_model": "openrouter/optimus-alpha", "summary": "Divide the grid into subgrids separated by rows of all 5s (which remain unchanged). For each 3-row subgrid, examine its middle row: for each non-5 value C at columns j, set columns j-1, j, and j+1 in all rows of the subgrid to C+5; columns with 5s in the middle row remain 5. All rows in each subgrid are identical, determined by this pattern.", "summary_prompt_tokens": 2241, "summary_completion_tokens": 96}
{"task_id": "5521c0d9", "summary_model": "openrouter/optimus-alpha", "summary": "Identify each contiguous non-black rectangular block in the input grid. For each block, move it upwards by a number of rows equal to its height, keeping its columns and shape unchanged. Place the shifted blocks in the output grid, filling all other cells with black (0).", "summary_prompt_tokens": 3722, "summary_completion_tokens": 55}
{"task_id": "5582e5ca", "summary_model": "openrouter/optimus-alpha", "summary": "Replace every cell in the input grid with the most frequently occurring digit in the grid, producing an output grid of the same size filled entirely with that digit.", "summary_prompt_tokens": 1101, "summary_completion_tokens": 32}
{"task_id": "5614dbcf", "summary_model": "openrouter/optimus-alpha", "summary": "Divide the 9x9 input grid into non-overlapping 3x3 blocks; for each block, determine the most frequent color (breaking ties arbitrarily), and set the corresponding cell in the 3x3 output grid to that color.", "summary_prompt_tokens": 2492, "summary_completion_tokens": 51}
{"task_id": "56ff96f3", "summary_model": "openrouter/optimus-alpha", "summary": "For each distinct nonzero color in the input grid, find all its cell positions, determine the minimal bounding rectangle that contains all such cells, and fill this rectangle in the output grid with that color; the output grid is otherwise filled with zeros and has the same dimensions as the input.", "summary_prompt_tokens": 3728, "summary_completion_tokens": 58}
{"task_id": "5bd6f4ac", "summary_model": "openrouter/optimus-alpha", "summary": "Extract the 3x3 subgrid from the top-right corner of the 9x9 input grid (rows 0\u20132, columns 6\u20138) and output it as the result.", "summary_prompt_tokens": 1759, "summary_completion_tokens": 42}
{"task_id": "6150a2bd", "summary_model": "openrouter/optimus-alpha", "summary": "Rotate the input 3x3 grid by 180 degrees, so that each element at position (row, col) moves to position (2-row, 2-col) in the output grid.", "summary_prompt_tokens": 1605, "summary_completion_tokens": 41}
{"task_id": "623ea044", "summary_model": "openrouter/optimus-alpha", "summary": "Given a grid with a single nonzero pixel, draw the largest possible 'X' (diagonals) centered at that pixel, coloring all valid positions along (r\u00b1k, c\u00b1k) for all k\u22650 within grid boundaries. If the pixel is not on the center row or column, and the corresponding diagonal from the opposite quadrant starting at (r\u00b1k_max+1, c\u00b1k_max+1) (direction depends on quadrant) is within bounds, also draw a straight diagonal line from that point to the grid edge. Otherwise, only the maximal 'X' is drawn.", "summary_prompt_tokens": 3893, "summary_completion_tokens": 123}
{"task_id": "62c24649", "summary_model": "openrouter/optimus-alpha", "summary": "Expand the input grid to double its size in both dimensions by mirroring the input horizontally and vertically; each quadrant of the output is a mirrored copy of the input, so the output is formed by placing the input in each corner and reflecting rows and columns accordingly to fill the enlarged grid.", "summary_prompt_tokens": 422, "summary_completion_tokens": 58}
{"task_id": "67385a82", "summary_model": "openrouter/optimus-alpha", "summary": "Change each green cell (3) to red (8) if it has at least one orthogonal neighbor (up, down, left, or right) that is also green (3); otherwise, leave it unchanged. All other cells remain the same.", "summary_prompt_tokens": 2939, "summary_completion_tokens": 52}
{"task_id": "6773b310", "summary_model": "openrouter/optimus-alpha", "summary": "Divide the 11x11 input grid into nine 3x3 subgrids using the blue (8) lines as separators. For each subgrid, count the number of red (6) cells; if there are exactly two, set the corresponding cell in the 3x3 output grid to 1, otherwise set it to 0.", "summary_prompt_tokens": 2562, "summary_completion_tokens": 72}
{"task_id": "67a3c6ac", "summary_model": "openrouter/optimus-alpha", "summary": "Reverse each row of the input grid. For each position in the reversed row, copy the digit from the corresponding column of the original input row (i.e., Output[i][j] = Input[i][n-1-j]).", "summary_prompt_tokens": 424, "summary_completion_tokens": 47}
{"task_id": "67e8384a", "summary_model": "openrouter/optimus-alpha", "summary": "For a given 3x3 input grid, create a 6x6 output grid where each row is formed by concatenating the input row with its reverse, and the bottom three rows are a vertical mirror of the top three rows.", "summary_prompt_tokens": 442, "summary_completion_tokens": 49}
{"task_id": "68b16354", "summary_model": "openrouter/optimus-alpha", "summary": "Reverse the order of the rows in the input grid to produce the output grid (vertical flip).", "summary_prompt_tokens": 1375, "summary_completion_tokens": 20}
{"task_id": "6b9890af", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the hollow rectangle (frame) and the other object (content) in the input grid. Crop both to their bounding boxes. The output grid size matches the frame's bounding box. Draw the frame as a border in its original color. Scale the content pattern so it fits exactly inside the frame's inner area (output size minus 2 in each dimension), expanding each content pixel into a block if needed. Place the scaled content, preserving its shape and color, centered within the frame's inner area. All other cells are set to black.", "summary_prompt_tokens": 3954, "summary_completion_tokens": 110}
{"task_id": "6c434453", "summary_model": "openrouter/optimus-alpha", "summary": "Scan the grid for every 3x3 region centered at each cell. If the region matches either of these patterns: (A) all 1s except the center is 0, or (B) all 1s except the left and right neighbors are 0 and the center is 1, then replace that 3x3 region in the output with a plus-shaped pattern: 2s in the center and cross, 0s in the corners, and leave all other cells unchanged.", "summary_prompt_tokens": 2562, "summary_completion_tokens": 103}
{"task_id": "6d0aefbc", "summary_model": "openrouter/optimus-alpha", "summary": "For each row in the input grid, create the output row by concatenating the row with its reverse; repeat for all rows to form the output grid.", "summary_prompt_tokens": 2017, "summary_completion_tokens": 32}
{"task_id": "6f8cd79b", "summary_model": "openrouter/optimus-alpha", "summary": "Replace all border elements of the grid with 8s and all interior elements with 0s; for odd-sized square grids, the very center cell is also set to 8.", "summary_prompt_tokens": 498, "summary_completion_tokens": 38}
{"task_id": "6fa7a44f", "summary_model": "openrouter/optimus-alpha", "summary": "Duplicate the input grid by stacking a vertically flipped (row-reversed) copy of it below the original, resulting in an output grid with double the original height.", "summary_prompt_tokens": 1323, "summary_completion_tokens": 33}
{"task_id": "77fdfe62", "summary_model": "openrouter/optimus-alpha", "summary": "Extract the inner grid bounded by the '1' frame from the input. For each cell in this inner grid, if its value is 8, set the corresponding output cell to the color of the matching input corner quadrant (top-left, top-right, bottom-left, bottom-right); otherwise, set it to 0. The output grid thus has the same size as the inner grid, with 8s replaced by their quadrant's corner color and all other cells set to 0.", "summary_prompt_tokens": 2788, "summary_completion_tokens": 99}
{"task_id": "780d0b14", "summary_model": "openrouter/optimus-alpha", "summary": "Divide the input grid into sections by identifying rows and columns that are entirely zero (black), which act as horizontal and vertical separators. Each section is the rectangular area bounded by these separators. For each section, determine the single non-zero color present, and construct an output grid where each cell corresponds to a section and contains its color, preserving the spatial arrangement of the sections.", "summary_prompt_tokens": 3178, "summary_completion_tokens": 75}
{"task_id": "7f4411dc", "summary_model": "openrouter/optimus-alpha", "summary": "Keep a nonzero cell if and only if it is part of at least one 2\u00d72 block (square) where all four cells have the same nonzero color; otherwise, set it to zero. All background (zero) cells remain zero.", "summary_prompt_tokens": 5833, "summary_completion_tokens": 52}
{"task_id": "88a62173", "summary_model": "openrouter/optimus-alpha", "summary": "Divide the 5x5 input grid into four 2x2 quadrants separated by a central cross of zeros; identify the one quadrant that differs from the other three (which are identical), and output this unique 2x2 quadrant as the result.", "summary_prompt_tokens": 1498, "summary_completion_tokens": 53}
{"task_id": "8be77c9e", "summary_model": "openrouter/optimus-alpha", "summary": "Duplicate the input grid by appending a vertically flipped (row-reversed) copy of itself below the original, resulting in an output grid with double the height and identical width.", "summary_prompt_tokens": 1355, "summary_completion_tokens": 36}
{"task_id": "8d5021e8", "summary_model": "openrouter/optimus-alpha", "summary": "Given a 3x2 input grid, construct the output by horizontally concatenating the horizontally flipped input grid with the original input grid, and repeat this combined block three times vertically to form a 9x4 output grid.", "summary_prompt_tokens": 3794, "summary_completion_tokens": 46}
{"task_id": "8e1813be", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the largest rectangular block of a unique color (the \"block\"). Determine whether horizontal or vertical monochromatic lines (excluding the block color) dominate. If horizontal lines dominate, output a grid with one row per horizontal line (ordered top-to-bottom), each row filled with the line's color, and the number of columns equal to the block's height. If vertical lines dominate, output a grid with one column per vertical line (ordered left-to-right), each row repeating the sequence of line colors, and the number of rows equal to the block's height.", "summary_prompt_tokens": 5296, "summary_completion_tokens": 113}
{"task_id": "8efcae92", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all connected components (shapes) of non-zero cells in the input grid; for each, count the number of cells with color 2. Select the shape with the highest count of color 2 cells, extract its minimal bounding box from the input, and output this cropped subgrid.", "summary_prompt_tokens": 3061, "summary_completion_tokens": 60}
{"task_id": "05269061", "summary_model": "openrouter/optimus-alpha", "summary": "Identify all unique non-zero colors in the input grid. For each color, find the coordinates of its first occurrence and assign it to position `(row + col) % N` in a sequence of length N (where N is the number of unique colors). Construct the output grid so that each cell at position (i, j) is filled with the color from the sequence at index `(i + j) % N`.", "summary_prompt_tokens": 2980, "summary_completion_tokens": 85}
{"task_id": "178fcbfb", "summary_model": "openrouter/optimus-alpha", "summary": "For each row in the input:\n- If the row contains a 1, output a row of all 1s at that position.\n- If the row contains a 3, output a row of all 3s at that position.\n- Otherwise, output a \"2-row,\" which is the elementwise maximum (OR) of all input rows containing a 2, repeated in all remaining positions.", "summary_prompt_tokens": 2900, "summary_completion_tokens": 83}
{"task_id": "239be575", "summary_model": "openrouter/optimus-alpha", "summary": "Count the total occurrences of 0 and 8 in the input grid; output the digit (0 or 8) that appears most frequently. If there is a tie, output 8.", "summary_prompt_tokens": 466, "summary_completion_tokens": 40}
{"task_id": "445eab21", "summary_model": "openrouter/optimus-alpha", "summary": "Identify the unique nonzero digit forming the filled square in the top left section of the input grid, and output a 2x2 grid filled with that digit.", "summary_prompt_tokens": 524, "summary_completion_tokens": 34}
{"task_id": "53b68214", "summary_model": "openrouter/optimus-alpha", "summary": "Extend the input grid by appending additional rows that repeat the last two rows of the input in their original alternating order, adding as many rows as there are unique rows in this repeating pattern.", "summary_prompt_tokens": 774, "summary_completion_tokens": 39}
{"task_id": "746b3537", "summary_model": "openrouter/optimus-alpha", "summary": "For each block of consecutive identical rows in the input, output a row containing the unique digits from the first row of the block, listed in the order they first appear.", "summary_prompt_tokens": 389, "summary_completion_tokens": 35}
{"task_id": "7b7f7511", "summary_model": "openrouter/optimus-alpha", "summary": "For any input grid, output only the first half of the rows (top N/2 rows), discarding the rest.", "summary_prompt_tokens": 365, "summary_completion_tokens": 26}
{"task_id": "28bf18c6", "summary_model": "openrouter/optimus-alpha", "summary": "Crop the minimal bounding rectangle containing all nonzero cells, then horizontally duplicate this cropped block to form a grid with the same number of rows and twice the number of columns.", "summary_prompt_tokens": 454, "summary_completion_tokens": 35}
